@{
    ViewData["Title"] = "Home Page";
}

@section Scripts{
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

    <script type="text/javascript">

        $(document).ready(() => {
            var connection = new signalR.HubConnectionBuilder().configureLogging(signalR.LogLevel.Critical).withAutomaticReconnect([1000, 3000, 3000, 2000]).withUrl("https://localhost:7153/MyHub").build();

            statusShow();
            start();

            // Functions
            function statusShow() {
                $("#conStatus").text(connection.state);
            }

            function start() {
                connection.start().then(() => {
                    statusShow();
                    $("#loading").hide();

                    // connection.invoke("GetNames");

                    connection.invoke("GetNamesByGroup");

                }).catch((err) => {
                    console.log(err);
                    setTimeout(() => start(), 2000);
                });
            }

            statusShow();

            // Subscribes

            connection.onreconnecting(err => {
                $("#loading").show();
                statusShow();
            });

            connection.onreconnected(connectionId => {
                $("#loading").hide();
                statusShow();
                console.log("connectionId: " + connectionId);
            });

            connection.onclose(() => {
                $("#loading").hide();
                statusShow();
                start();
            });

            connection.on("ReceiveClientCount", (clientCount) => {
                $("#clientCount").text(clientCount);
            });

            // Clicks

            $("#btnNameSave").click(() => {

                connection.invoke("SendName", $("#txtName").val()).catch((err) => console.log(err));

            });

            $("#btnNameTeam").click(() => {

                let name = $("#txtName").val();
                let teamName = $("input[type=radio]:checked").val();

                if (teamName === null) {
                    alert("Select a team");
                    return;
                }

                connection.invoke("SendNameByGroup", name, teamName).catch((err) => {
                    console.log(err);
                });
            });

            $("input[type=radio]").change(() => {
                let value = $(`input[type=radio]:checked`).val();

                console.log(value);

                if (value === "Team A") {
                    connection.invoke("AddToGroup", value);

                    connection.invoke("RemoveToGroup", "Team B");
                } else {
                    connection.invoke("AddToGroup", value);

                    connection.invoke("RemoveToGroup", "Team A");
                }
            });

            // on methods.

            // subscribe (return sendName operation)
            connection.on("ReceiveName", (name) => {
                $("#namesList").append(`<li class="list-group-item"> ${name}</li>`)
            });

            connection.on("Notify", (countText) => {
                $("#notify").html(`<div class="alert alert-success">${countText}</div>`)
            });

            connection.on("Error", (errorText) => {
                alert(errorText);
            });

            connection.on("ReceiveNames", (names) => {
                console.log(names);
                connection("#namesList").empty();

                // doesn't work?
                names.forEach((item, index) => {
                    $("#namesList").append(`<li class="list-group-item"> ${item}</li>`)
                });
            });

            connection.on("ReceiveMessageByGroup", (name, teamId) => {

                let listName = "";

                if (teamId === 1) {
                    $("#ATeamList").append

                    listName = "ATeamList"
                }

                else {
                    listName = "BTeamList";
                }

                $(`#${listName}`).append(`<li class="list-group-item">${name}</li>`);
            });

            connection.on("ReceiveNamesByGroup", (teams) => {

                console.log(teams);

                teams.forEach((team, index) => {
                    if (team.teamId === 1) {
                        $("#ATeamList").append

                        listName = "ATeamList"
                    }

                    else {
                        listName = "BTeamList";
                    }

                    team.users.foreach((user, index2) => {
                        $(`#${listName}`).append(`<li class="list-group-item">${user.name}</li>`)
                    });
                });
            });
        });


    </script>
}

    <div class="row">
        <div class="col-md-8 offset-2">
            <input class="form-control" type="text" id="txtName" />
            <hr />
            <button class="btn btn-primary" id="btnNameSave">Save Name</button>
            <button class="btn btn-warning" id="btnNameTeam">Save Name(Team)</button>
            <div class="alert alert-info mt-2">
                <div class="float-left">
                    Connection Status: <strong id="conStatus"></strong>
                    Clients Available: <string id="clientCount"></string>
                </div>
                <div class="float-right">
                    <div id="loading" class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
            <div id="notify"></div>
        </div>
    </div>

    <div class="row">

        <div class="col-md-8 offset-md-2">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="TeamGroup" value="Team A" />
                <label class="form-check-label">A Team</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="TeamGroup" value="Team B" />
                <label class="form-check-label">B Team</label>
            </div>
        </div>

        <div class="col-md-8 offset-2">
            <div class="row">
                <div class="col-md-6">
                    <h2>Team A</h2>
                    <ul class="list-group" id="ATeamList"></ul>
                </div>
                <div class="col-md-6">
                    <h2>Team B</h2>
                    <ul class="list-group" id="BTeamList"></ul>
                </div>
            </div>
        </div>
    </div>